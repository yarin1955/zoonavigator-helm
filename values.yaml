# Default values for zoonavigator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: elkozmon/zoonavigator
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.7.1"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 9000

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: zoo.info
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: example-cert
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http

ui:
  ########## Server ##########

  # The path to the keystore containing the private key and certificate, if not provided generates a keystore for
  # you.
  #SSL_KEYSTORE_PATH: ''

  # The password to the keystore, defaults to a blank password.
  #SSL_KEYSTORE_PASSWORD: ''

  # The key store type.
  #SSL_KEYSTORE_TYPE: JKS

  # Sets session inactivity timeout for users. This value is in milliseconds.
  #SESSION_TIMEOUT_MILLIS: 900000

  # Secret key for Play Framework - used for signing session cookies and CSRF tokens. Defaults to 64 random
  # characters generated from /dev/urandom.
  #SECRET_KEY: ''

  # If set, ZooNavigator will use this value as a default connection string and skip the connect form,
  # automatically connecting to listed ZooKeeper servers.
  AUTO_CONNECT_CONNECTION_STRING: 'zoo-1:2181,zoo-2:2181,zoo-3:2181'

  # In addition to presetting connection string as explained above, you can also set Auth info which ZooNavigator
  # will use to authenticate with ZooKeeper during the auto-connect. Use semicolon (;) to separate multiple entries.
  #AUTO_CONNECT_AUTH_INFO: ''

client:
  # Sets inactivity timeout for ZooKeeper client. If user doesn’t make any request during this period ZooKeeper
  # connection will be closed and recreated for the future request if any. Note that user does not get logged out
  # unlike in event of session timeout. This value is in milliseconds.
  ZK_CLIENT_TIMEOUT_MILLIS: "5000"

  # Sets timeout for attempt to establish connection with ZooKeeper. This value is in milliseconds.
  ZK_CONNECT_TIMEOUT_MILLIS: "5000"

  # Set the value to false to disable SASL authentication.
  ZK_SASL_CLIENT: 'false'

  # Specifies the context key in the JAAS login file.
  #ZK_SASL_CLIENT_CONFIG: 'Client'

  # Specifies the primary part of the server principal. Learn more here.
  #ZK_SASL_CLIENT_USERNAME: 'zookeeper'

  # Realm part of the server principal. By default it is the client principal realm.
  #ZK_SERVER_REALM: ''

  # If you want to connect to the server secure client port, you need to set this property to true. This will
  # connect to server using SSL with specified credentials. Note that it requires using the Netty client.
  #ZK_CLIENT_SECURE: ''

  # Specifies which ClientCnxnSocket to be used. If you want to connect to server’s secure client port, you need to
  # set this property to :org.apache.zookeeper.ClientCnxnSocketNetty.
  ZK_CLIENT_CNXN_SOCKET: 'org.apache.zookeeper.ClientCnxnSocketNIO'

  # Specifies the file path to a JKS containing the local credentials to be used for SSL connections.
  #ZK_SSL_KEYSTORE_PATH: ''

  # Specifies the password to a JKS containing the local credentials to be used for SSL connections.
  #ZK_SSL_KEYSTORE_PASSWORD: ''

  # Specifies the file path to a JKS containing the remote credentials to be used for SSL connections.
  #ZK_SSL_TRUSTSTORE_PATH: ''

  # Specifies the password to a JKS containing the remote credentials to be used for SSL connections.
  #ZK_SSL_TRUSTSTORE_PASSWORD: ''

java:
  # Custom Java arguments.
  #JAVA_OPTS: ''

  # Sets initial Java heap size. This value is in bytes if no unit is specified.
  #JAVA_XMS: ''

  # Sets maximum Java heap size. This value is in bytes if no unit is specified.
  #JAVA_XMX: ''

  # Path to JAAS login configuration file to use.
  #JAVA_JAAS_LOGIN_CONFIG: ''

  # If set to true, enables debugging mode and detailed logging for Kerberos.
  #JAVA_KRB5_DEBUG: ''

  # Sets the default Kerberos realm.
  #JAVA_KRB5_REALM: ''

  # Sets the default Kerberos KDC.
  #JAVA_KRB5_KDC: ''

nodeSelector: {}

tolerations: []

affinity: {}